name: Build for MacOS

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-macOS:
    permissions:
      contents: 'write'
    runs-on: macos-12
    steps:
      # Install build dependencies
      - name: Install Ninja
        run: brew install ninja
      - name: Install Qt6.6.0
        uses: jurplel/install-qt-action@v3
        with:
          # See https://ddalcino.github.io/aqt-list-server/
          aqtversion: '==3.1.*'
          version: '6.6.0'
          modules: 'qtmultimedia'
          cache: true
          cache-key-prefix: install-qt-6.6.0-action-${{ runner.os }}
      
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4
      
      # Build and install TagLib dependency
      - name: Cache TagLib build
        id: cache-taglib
        uses: actions/cache@v4
        with:
          path: taglib
          key: taglib-${{ runner.os }}-${{ hashFiles('.github/workflows/build-macOS.yml') }}
      - name: Build TagLib
        if: ${{ steps.cache-taglib.outputs.cache-hit != 'true' }}
        run: |
          git clone --depth 1 --branch v2.0 https://github.com/taglib/taglib.git
          cd taglib
          git submodule update --init
          cmake -G Ninja -DBUILD_SHARED_LIBS=ON -DWITH_ZLIB=OFF -DCMAKE_BUILD_TYPE=Release -S . -B build
          cmake --build build --config Release
          cd ..
        shell: bash
      - name: Install TagLib
        run: sudo cmake --install taglib/build
      
      # Update project version
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
      - name: Install semantic-release
        run: npm install
      - name: Update version
        run: python deploy/update_version.py src/APPLICATION_INFO.h
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Save the version as an output
        id: get_version
        run: echo "version=$(cat .version)" >> "$GITHUB_OUTPUT"
        shell: bash
      
      # Build the project
      - name: Build
        # No need to set CMAKE_PREFIX_PATH, because install-qt-action did the work for us
        run: cmake -G Ninja "-DCMAKE_BUILD_TYPE:STRING=Release" -S . -B build && cmake --build build --config Release
      
      # Package with macdeployqt
      - name: Package with macdeployqt
        run: |
          mkdir -p build/GlyphVisualizer.app/Contents/Frameworks/
          cp taglib/build/libtag.dylib build/GlyphVisualizer.app/Contents/Frameworks/
          cd build
          macdeployqt GlyphVisualizer.app -dmg
          cd ..
      - name: Move and rename executable
        run: mv build/GlyphVisualizer.dmg GlyphVisualizer-$(cat .version)_macOS-12-x64.dmg
      
      # Calculate the checksum
      - name: Calculate Checksum
        run: shasum -a 256 -b GlyphVisualizer-$(cat .version)_macOS-12-x64.dmg | tee GlyphVisualizer-$(cat .version)_macOS-12-x64.dmg.sha256
      
      # Upload the artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: GlyphVisualizer-${{ steps.get_version.outputs.version }}_macOS-12-x64
          path: |
            GlyphVisualizer*_macOS-12-x64.dmg
            GlyphVisualizer*_macOS-12-x64.dmg.sha256