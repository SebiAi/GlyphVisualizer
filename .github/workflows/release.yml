name: Release

on:
  workflow_dispatch:

jobs:
  # TODO: Add version number to the zip and executable file with semantic-release/semantic-release: https://github.com/semantic-release/semantic-release/issues/753
  # See also this: https://github.com/jpoehnelt/semantic-release-replace-plugin
  build:
    name: Build
    strategy:
      matrix:
        # TODO Add macOS: macos-latest
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Install Ninja, Qt and setup MSVC - installation of Ninja is not needed on Windows, because it is already installed on the Windows image (in MSVC)
      - name: Install Ninja
        run: sudo apt install -y ninja-build
        if: matrix.os == 'ubuntu-latest'
      - name: Install Qt6.6.0
        uses: jurplel/install-qt-action@v3
        with:
          # See https://ddalcino.github.io/aqt-list-server/
          aqtversion: '==3.1.*'
          version: '6.6.0'
          modules: 'qtmultimedia'
      - name: Setup MSVC 2022 for C++
        # See supported versions here: https://doc.qt.io/qt-6/windows.html
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-latest'
      
      # Checkout + Build
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        # No need to set CMAKE_PREFIX_PATH, because install-qt-action did the work for us
        run: cmake -G Ninja "-DCMAKE_BUILD_TYPE:STRING=Release" -S . -B build && cmake --build build --config Release
      
      # Package with windeployqt + zip
      # TODO: Use NSIS to create an installer (Extract files, silently install vc_redist.x64.exe, create start menu entry, etc.)
      - name: Use windeployqt and zip
        run: |
          mkdir GlyphVisualizer && cp build\GlyphVisualizer.exe GlyphVisualizer && windeployqt --release GlyphVisualizer\GlyphVisualizer.exe
          Compress-Archive -Path GlyphVisualizer -DestinationPath GlyphVisualizer_windows-x64.zip
        if: matrix.os == 'windows-latest'
      
      # Calculate checksum + upload (Windows)
      - name: Calculate Checksum
        run: $(CertUtil -hashfile GlyphVisualizer_windows-x64.zip SHA256)[1] -replace ' ','' | tee GlyphVisualizer_windows-x64.zip.sha256.txt
        if: matrix.os == 'windows-latest'
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: GlyphVisualizer_windows-x64
          path: |
            GlyphVisualizer_windows-x64.zip
            GlyphVisualizer_windows-x64.zip.sha256.txt
      
      # Calculate checksum + upload (Ubuntu)
      - name: Rename executable
        run: mv build/GlyphVisualizer build/GlyphVisualizer_linux-ubuntu-x64
        if: matrix.os == 'ubuntu-latest'
      - name: Calculate Checksum
        run: sha256sum -b build/GlyphVisualizer_linux-ubuntu-x64 | tee GlyphVisualizer_linux-ubuntu-x64.sha256
        if: matrix.os == 'ubuntu-latest'
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: GlyphVisualizer_linux-ubuntu-x64
          path: |
            build/GlyphVisualizer_linux-ubuntu-x64
            GlyphVisualizer_linux-ubuntu-x64.sha256